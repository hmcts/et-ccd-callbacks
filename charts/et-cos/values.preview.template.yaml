tags:
  et-ccd-stack: true

java:
  image: ${IMAGE_NAME}
  ingressHost: ${SERVICE_FQDN}
  environment:
    ET_COS_DB_HOST: "{{ .Release.Name }}-postgresql"
    ET_COS_DB_NAME: "{{ .Values.postgresql.auth.database}}"
    ET_COS_DB_USER_NAME: "{{ .Values.postgresql.auth.username}}"
    ET_COS_DB_PASSWORD: "{{ .Values.postgresql.auth.password}}"
    ET_COS_DB_CONN_OPTIONS: ""
    REFERRAL_TEMPLATE_ID: 6ad8c05b-5c0b-4d10-a5e3-f39fdea4647e
    REJECTED_TEMPLATE_ID: 3f932a27-3960-4135-9ef5-5f2b9ec35da0
    ET1SERVING_TEMPLATE_ID: 2d839d00-88f0-4136-a65e-364da046c6f8
    ET3NOTIFICATION_TEMPLATE_ID: 5b801bd7-cfb3-4249-b99d-a3f5af96c253
  keyVaults:
    et-cos:
      secrets:
        - name: et-cos-s2s-secret
          alias: ET_COS_S2S_SECRET
    et:
      secrets:
        - name: create-updates-queue-send-connection-string
          alias: CREATE_UPDATES_QUEUE_SEND_CONNECTION_STRING
        - name: tornado-access-key
          alias: TORNADO_ACCESS_KEY
        - name: gov-notify-api-key
          alias: GOV_NOTIFY_API_KEY
  postgresql:
    enabled: true

et-sya:
  enabled: true
  nodejs:
    imagePullPolicy: Always
    image: hmctspublic.azurecr.io/et/sya:latest # or pr
    releaseNameOverride: ${SERVICE_NAME}-et-sya
    ingressHost: et-sya-${SERVICE_FQDN}
    keyVaults:
      et:
        resourceGroup: et
        secrets:
          - AppInsightsInstrumentationKey
          - idam-secret
          - redis-access-key
          - os-places-token
          - pcq-token-key
    environment:
      IDAM_WEB_URL: https://idam-web-public.aat.platform.hmcts.net/login
      IDAM_API_URL: https://idam-api.aat.platform.hmcts.net/o/token
      REDIS_HOST: et-sya-session-storage-aat.redis.cache.windows.net
      ET_SYA_API_HOST: http://{{ .Release.Name }}-et-sya-api
      PCQ_ENABLED: true

et-sya-api:
  enabled: true
  java:
    imagePullPolicy: Always
    image: hmctspublic.azurecr.io/et/sya-api:latest # or pr
    releaseNameOverride: ${SERVICE_NAME}-et-sya-api
    ingressHost: et-sya-api-${SERVICE_FQDN}
    keyVaults:
      et-sya-api:
        secrets:
          - name: et-sya-api-s2s-secret
            alias: ET_SYA_S2S_SECRET
          - name: Ocp-Apim-Subscription-Key
            alias: ACAS_KEY
      et:
        secrets:
          - AppInsightsInstrumentationKey
          - name: tornado-access-key
            alias: TORNADO_ACCESS_KEY
          - gov-notify-api-key
    environment:
      IDAM_API_BASEURL: https://idam-api.aat.platform.hmcts.net
      IDAM_JWKS_BASEURL: https://idam-api.aat.platform.hmcts.net/o/jwks
      CASE_DATA_STORE_BASEURL: http://{{ .Release.Name }}-ccd-data-store-api
      SERVICE_AUTH_PROVIDER_URL: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
      ACAS_URL: https://api-dev-acas-01.azure-api.net/ECCLDev
      MICRO_SERVICE: et_sya_api
      TORNADO_URL: https://docmosis.aat.platform.hmcts.net/rs/render
      CASE_DOCUMENT_AM_URL: http://ccd-case-document-am-api-aat.service.core-compute-aat.internal

ccd:
  ccd:
    definitionImporter:
      enabled: false
    managementWeb:
      enabled: false
    apiGatewayWeb:
      enabled: true
    s2s:
      enabled: false
    printService:
      enabled: false
    elastic:
      enabled: true

  ingressHost: ${SERVICE_FQDN}
  ingressIP: ${INGRESS_IP}
  consulIP: ${CONSUL_LB_IP}

  global:
    idamApiUrl: https://idam-api.aat.platform.hmcts.net
    idamWebUrl: https://idam-web-public.aat.platform.hmcts.net
    dmStoreUrl: http://dm-store-aat.service.core-compute-aat.internal
    ccdAdminWebIngress: admin-web-${SERVICE_FQDN}
    ccdApiGatewayIngress: gateway-${SERVICE_FQDN}
    ccdCaseManagementWebIngress: case-management-web-${SERVICE_FQDN}
    postgresUsername: hmcts
    postgresPassword: hmcts
    s2sUrl: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal

  ccd-user-profile-api:
    java:
      autoscaling:
        enabled: false
      imagePullPolicy: Always
      enviroment:
        USER_PROFILE_DB_HOST: ${SERVICE_NAME}-postgresql
      keyVaults: [ ]
      environment:
        USER_PROFILE_S2S_AUTHORISED_SERVICES: ccd_data,ccd_definition,ccd_admin
      ingressHost: ccd-user-profile-api-${SERVICE_FQDN}

  ccd-data-store-api:
    java:
      autoscaling:
        enabled: false
      imagePullPolicy: Always
      image: hmctspublic.azurecr.io/ccd/data-store-api:latest
      environment:
        DATA_STORE_DB_HOST: ${SERVICE_NAME}-postgresql
        DATA_STORE_IDAM_KEY: ${DATA_STORE_S2S_KEY}
        DATA_STORE_S2S_AUTHORISED_SERVICES: ccd_gw,ccd_gateway,ccd_data,ccd_ps,aac_manage_case_assignment,xui_webapp,
          ccd_case_document_am_api,et_cos,et_sya_api
        IDAM_API_BASE_URL: https://idam-api.aat.platform.hmcts.net
        IDAM_OIDC_URL: https://idam-web-public.aat.platform.hmcts.net
        IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET: ${IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET}
        IDAM_DATA_STORE_SYSTEM_USER_USERNAME: ${IDAM_DATA_STORE_SYSTEM_USER_USERNAME}
        IDAM_DATA_STORE_SYSTEM_USER_PASSWORD: ${IDAM_DATA_STORE_SYSTEM_USER_PASSWORD}
        CASE_DOCUMENT_AM_URL: http://ccd-case-document-am-api-aat.service.core-compute-aat.internal
        ELASTIC_SEARCH_ENABLED: true
        ELASTIC_SEARCH_HOSTS: ${SERVICE_NAME}-es-master:9200
        ELASTIC_SEARCH_DATA_NODES_HOSTS: http://${SERVICE_NAME}-es-master:9200
        ENABLE_ATTRIBUTE_BASED_ACCESS_CONTROL: true
        ENABLE_PSEUDO_ROLE_ASSIGNMENTS_GENERATION: true
        ENABLE_PSEUDO_ACCESS_PROFILES_GENERATION: true
      keyVaults: [ ]
      ingressHost: ccd-data-store-api-${SERVICE_FQDN}

  aac-manage-case-assignment:
    enabled: true
    java:
      imagePullPolicy: Always
      releaseNameOverride: ${SERVICE_NAME}-aac-manage-case-assignment
      image: hmctspublic.azurecr.io/aac/manage-case-assignment:latest
      ingressHost: aac-${SERVICE_FQDN}
      environment:
        IDAM_API_URL: https://idam-api.aat.platform.hmcts.net
        IDAM_OIDC_URL: https://idam-web-public.aat.platform.hmcts.net
        OIDC_ISSUER: https://forgerock-am.service.core-compute-idam-aat.internal:8443/openam/oauth2/hmcts
        S2S_URL: http://rpe-service-auth-provider-aat.service.core-compute-aat.internal
        MCA_DS_PROXY_URLS_ALLOWED_LIST: /searchCases.*,/internal/searchCases.*,/internal/cases.*
        MCA_DEF_STORE_PROXY_URLS_ALLOWED_LIST: /api/display/challenge-questions.*
        MANAGE_CASE_S2S_AUTHORISED_SERVICES: xui_webapp,ccd_data,fpl_case_service,divorce_frontend,divorce_ccd_submission,finrem_case_orchestration
        CCD_DATA_STORE_API_BASE_URL: http://{{ .Release.Name }}-ccd-data-store-api
        CCD_DEFINITION_STORE_API_BASE_URL: http://{{ .Release.Name }}-ccd-definition-store-api
        PRD_HOST: http://rd-professional-api-aat.service.core-compute-aat.internal
      autoscaling:
        enabled: false
      keyVaults: [ ]

  am-role-assignment-service:
    java:
      environment:
        CCD_DATA_STORE_URL: http://{{ .Release.Name }}-ccd-data-store-api
        RUN_LD_ON_STARTUP: false
      keyVaults: [ ]

  ccd-definition-store-api:
    java:
      autoscaling:
        enabled: false
      imagePullPolicy: Always
      image: hmctspublic.azurecr.io/ccd/definition-store-api:latest
      keyVaults: [ ]
      environment:
        DEFINITION_STORE_DB_HOST: ${SERVICE_NAME}-postgresql
        DEFINITION_STORE_IDAM_KEY: ${DEFINITION_STORE_S2S_KEY}
        DEFINITION_STORE_S2S_AUTHORISED_SERVICES: ccd_data,ccd_gw,ccd_admin,aac_manage_case_assignment
        IDAM_USER_URL: https://idam-web-public.aat.platform.hmcts.net
        OIDC_ISSUER: https://forgerock-am.service.core-compute-idam-aat.internal:8443/openam/oauth2/hmcts
        ELASTIC_SEARCH_ENABLED: true
        ELASTIC_SEARCH_HOST: ${SERVICE_NAME}-es-master
        #TS_TRANSLATION_SERVICE_HOST: http://ts-translation-service-aat.service.core-compute-aat.internal
        WELSH_TRANSLATION_ENABLED: false
      ingressHost: ccd-definition-store-${SERVICE_FQDN}

  ccd-admin-web:
    nodejs:
      autoscaling:
        enabled: false
      image: hmctspublic.azurecr.io/ccd/admin-web:latest
      ingressHost: admin-web-${SERVICE_FQDN}
      keyVaults: [ ]
      environment:
        IDAM_ADMIN_WEB_SERVICE_KEY: ${ADMIN_S2S_KEY}
        IDAM_OAUTH2_AW_CLIENT_SECRET: ${ADMIN_WEB_IDAM_SECRET}

  ccd-api-gateway-web:
    nodejs:
      autoscaling:
        enabled: false
      keyVaults: [ ]
      environment:
        IDAM_SERVICE_KEY: ${API_GATEWAY_S2S_KEY}
        IDAM_OAUTH2_CLIENT_SECRET: ${API_GATEWAY_IDAM_SECRET}
        PROXY_DOCUMENT_MANAGEMENT: http://dm-store-aat.service.core-compute-aat.internal
        PROXY_PRINT_SERVICE: http://ccd-case-print-service-${SERVICE_FQDN}
        ADDRESS_LOOKUP_TOKEN: ${ADDRESS_LOOKUP_TOKEN}
      ingressHost: gateway-${SERVICE_FQDN}
      ingressIP: ${INGRESS_IP}

  ccd-user-profile-importer:
    users:
      - et.api.1@hmcts.net|EMPLOYMENT|ET_Admin|Open

  postgresql:
    primary:
      initdb:
        scripts:
          init-et_cos.sql: |
            CREATE DATABASE "et_cos" WITH OWNER = hmcts ENCODING = 'UTF-8' CONNECTION LIMIT = -1;

  elasticsearch:
    nameOverride: ${SERVICE_NAME}-es
    clusterName: "es"
    imageTag: "7.17.0"
    replicas: 1
    initResources:
      limits:
        cpu: "500m"
        memory: "512Mi"
      requests:
        cpu: "25m"
        memory: "512Mi"
    minimumMasterNodes: 1
    antiAffinity: "soft"
    esJavaOpts: "-Xmx512m -Xms512m"
    extraEnvs:
      - name: discovery.type
        value: single-node
      - name: cluster.initial_master_nodes
        value: ""
      - name: action.auto_create_index
        value: .security*,.watches,.triggered_watches,.watcher-history-*,.logstash_dead_letter,.ml*
    persistence:
      enabled: false
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: traefik
      path: /
      hosts:
        - es-${SERVICE_FQDN}

  logstash:
    devmemoryRequests: 512Mi
    devcpuRequests: "1000m"
    devmemoryLimits: 1024Mi
    devcpuLimits: "2500m"
    resources:
      requests:
        cpu: 1000m
        memory: 512Mi
    image:
      repository: hmctspublic.azurecr.io/ccd/logstash
      tag: ccd-ethos-logstash-latest
      pullPolicy: Always
    logstashJavaOpts: -Xmx1g -Xms512M
    persistence:
      enabled: false
    volumeMounts:
      - name: pipeline
        mountPath: /usr/share/logstash/files
    elasticsearch:
      host: ${SERVICE_NAME}-es-master
      port: 9200
    configTpl:
      xpack.monitoring.enabled: "false"
      db.url: jdbc:postgresql://${SERVICE_NAME}-postgresql:5432/data-store?ssl=disable&stringtype=unspecified
      db.user: hmcts
      db.pwd: hmcts
      es.data.nodes.url: http://${SERVICE_NAME}-es-master:9200
    livenessProbe:
      initialDelaySeconds: 90

xui-webapp:
  enabled: true
  nodejs:
    imagePullPolicy: Always
    releaseNameOverride: ${SERVICE_NAME}-xui-webapp
    image: hmctspublic.azurecr.io/xui/webapp:latest
    ingressHost: xui-${SERVICE_FQDN}
    environment:
      SERVICES_CCD_CASE_ASSIGNMENT_API: https://aac-${SERVICE_FQDN}
      SERVICES_CCD_COMPONENT_API: http://{{ .Release.Name }}-ccd-api-gw
      SERVICES_CCD_DATA_STORE_API: http://{{ .Release.Name }}-ccd-data-store-api
      SERVICES_DOCUMENTS_API_V2: http://ccd-case-document-am-api-aat.service.core-compute-aat.internal
      JURISDICTIONS: EMPLOYMENT
      FEATURE_REDIS_ENABLED: false
      NODE_OPTIONS: --max-old-space-size=900

idam-pr:
  enabled: true
  releaseNameOverride: ${SERVICE_NAME}-idam-pr
  redirect_uris:
    XUI:
      - https://xui-${SERVICE_FQDN}/oauth2/callback
    XUIMO:
      - https://xui-mo-${SERVICE_FQDN}/oauth2/callback
    CCD Admin:
      - https://admin-web-${SERVICE_FQDN}/oauth2redirect
    ET Citizen Submit Your Appeal:
      - https://et-sya-${SERVICE_FQDN}/oauth2/callback
