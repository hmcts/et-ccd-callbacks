'use strict';

const requireDirectory = require('require-directory');
const steps = requireDirectory(module);

module.exports = () => {
    return actor({
        authenticateWithIdam: steps.IDAM.signIn,
        chooseNextStep: steps.nextStep.nextStep,
        acceptTheCase: steps.acceptanceCase.acceptCase,
        rejectTheCase:steps.acceptanceCase.rejectCase,
        executeClaimantDetails:steps.amendClaimantDetails.amendClaimantDetails,
        executeClaimantRepresentative:steps.amendClaimantRepresentative.amendClaimantRepresentative,
        executeRespondentDetails:steps.amendRespondentDetails.amendRespondentDetails,
        amendTheCaseDetails:steps.amendCaseDetails.amendCaseDetails,
        amendCaseDetailsWithCaseCurrentPosition:steps.amendCaseDetails.amendCaseDetailsWithCasePosition,
        executeRespondentRepresentative:steps.amendRespondentRepresentative.amendRespondentRepresentative,
        executeAddAmendJurisdiction:steps.amendJurisdiction.addAmendJurisdiction,
        executeCloseCase:steps.desposeCase.desposeCase,
        executeLettersEvent:steps.generateCorrespondence.generateCorrespondence,
        setRestrictedReporting:steps.restrictedCases.restrictedCases,
        executeFixCaseAPI:steps.fixCaseApi.fixCaseApi,
        executeBFAction:steps.broughtForward.broughtForward,
        executeAddAmendHearing:steps.amendHearing.addAmendHearing,
        executeAllocateHearing:steps.allocateHearing.allocateHearing,
        executeHearingDetails:steps.hearingDetails.hearingDetails,
        amendHearingDetails:steps.hearingDetails.updateHearingDetails,
        // executePrintHearingLists:steps.printHearingLists.printHearingLists,
        executeCaseTransfer:steps.caseTransfer.caseTransfer,
        executeJudgment:steps.amendJudgment.addAmendJudgment,
        executeCreateReport: steps.createReport.createReport,
        selectNewCase: steps.newCase.newCase,
        selectCaseTypeOptions: steps.createCase.createCase,
        enterCreateCasePage1: steps.createCasePages.page1initiateCase1,
        enterClaimantDetailsPage2: steps.createCasePages.page2claimantDetails,
        enterRespondentDetailPage3: steps.createCasePages.page3RespondentsDetails,
        enterClaimantWorkDetailsPage4: steps.createCasePages.page4claimantWorkAddressDetails,
        enterClaimantOtherDetailsPage5: steps.createCasePages.page5ClaimantOtherDetails,
        enterBroughtForwardDatesPage6: steps.createCasePages.page6BroughtForwardDates,
        enterClaimantRepresentedPage7: steps.createCasePages.page7claimantRepresented,
        enterUploadDocPage8: steps.createCasePages.page8UploadDocumentsPage,
        submitPage9: steps.createCasePages.page9SubmitPage,
        startInitialConsideration: steps.initialConsideration.initialConsiderationStartPage,
        initialConsiderationRule26: steps.initialConsideration.initialConsiderationRule26Page,
        initialConsiderationCheckYourAnswers: steps.initialConsideration.initialConsiderationCheckYourAnswersPage,
        startet1Vetting: steps.et1Vetting.et1VettingBeforeYouStart,
        minReqInfoET1Vetting: steps.et1Vetting.minReqInfoET1Vetting,
        minReqInfo2ET1Vetting: steps.et1Vetting.minReqInfo2ET1Vetting,
        et1CaseVettingOptions1: steps.et1Vetting.et1CaseVettingOptions1,
        caseDetails1ET1Vetting: steps.et1Vetting.caseDetails1ET1Vetting,
        caseDetails2ET1Vetting: steps.et1Vetting.caseDetails2ET1Vetting,
        caseDetails3ET1Vetting: steps.et1Vetting.caseDetails3ET1Vetting,
        caseDetails4ET1Vetting: steps.et1Vetting.caseDetails4ET1Vetting,
        furtherQET1Vetting: steps.et1Vetting.furtherQET1Vetting,
        possibleReferal1ET1Vetting: steps.et1Vetting.possibleReferal1ET1Vetting,
        possibleReferal2ET1Vetting: steps.et1Vetting.possibleReferal2ET1Vetting,
        otherFactorsET1Vetting: steps.et1Vetting.otherFactorsET1Vetting,
        finalNotesET1Vetting: steps.et1Vetting.finalNotesET1Vetting,
        checkYourAnswersET1Vetting: steps.et1Vetting.checkYourAnswersET1Vetting,
        et3Processing: steps.et3Processing.et3ProcessingPage,
        et3ProcessingWithNoResponse: steps.et3Processing.et3ProcessingPageNoET3Response,
        et1ServingProcess:steps.et1Serving.processEt1Serving,
        et3NotificationProcess:steps.et3Notification.processEt3Notification
    });
};
