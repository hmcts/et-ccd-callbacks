#!groovy

import uk.gov.hmcts.contino.GithubAPI

@Library("Infrastructure")

String product = "et"
String component = "ccd-definitions-admin"
def dmnBranch = "master"
def bpmnBranch = "master"
def yarnBuilder = new uk.gov.hmcts.contino.YarnBuilder(this)

def secrets = [
  'rpx-${env}': [
          secret('mc-idam-client-secret', 'IDAM_CLIENT_SECRET'),
  ],
  's2s-${env}': [
          secret('microservicekey-ccd-data', 'DATA_STORE_S2S_KEY'),
          secret('microservicekey-ccd-definition', 'DEFINITION_STORE_S2S_KEY'),
          secret('microservicekey-ccd-gw', 'API_GATEWAY_S2S_KEY'),
          secret('microservicekey-ccd-ps', 'PRINT_S2S_KEY'),
          secret('microservicekey-ccd-admin', 'ADMIN_S2S_KEY'),
          secret('microservicekey-et-cos', 'ET_COS_S2S_KEY')
  ],
  'ccd-${env}': [
          secret('ccd-api-gateway-oauth2-client-secret', 'API_GATEWAY_IDAM_SECRET'),
          secret('ccd-admin-web-oauth2-client-secret', 'ADMIN_WEB_IDAM_SECRET'),
          secret('postcode-info-address-lookup-token', 'ADDRESS_LOOKUP_TOKEN'),
          secret('idam-data-store-client-secret','IDAM_OAUTH2_DATA_STORE_CLIENT_SECRET'),
          secret('idam-data-store-system-user-username','IDAM_DATA_STORE_SYSTEM_USER_USERNAME'),
          secret('idam-data-store-system-user-password','IDAM_DATA_STORE_SYSTEM_USER_PASSWORD'),
          secret('AppInsightsInstrumentationKey', 'APP_INSIGHTS_INSTRUMENTATION_KEY')
  ],
  'et-${env}': [
          secret('ccd-admin-username', 'CCD_ADMIN_USERNAME'),
          secret('ccd-admin-password', 'CCD_ADMIN_PASSWORD'),
          secret('caseworker-admin-username', 'TEST_CASEWORKER_USERNAME'),
          secret('caseworker-admin-password', 'TEST_CASEWORKER_PASSWORD'),
          secret('et-preview-flexi-db-password', 'ET_PREVIEW_FLEXI_DB_PASSWORD'),
          secret('et-wa-caseworker-username', 'ET_CASEOFFICER_USERNAME'),
          secret('et-wa-caseworker-password', 'ET_CASEOFFICER_PASSWORD')
  ],
  'et-cos-${env}': [
          secret('cos-system-user', 'ET_SYSTEM_USER'),
          secret('cos-system-user-password', 'ET_SYSTEM_USER_PASSWORD')
  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

withPipeline("nodejs", product, component) {

  loadVaultSecrets(secrets)

  afterAlways('test') {
    // enable yarn audit and send message on master branch only
    try {
      yarnBuilder.yarn('audit')
    } catch (error) {
      onMaster {
        slackSend(channel: '#et-builds', color: 'warning', message: "Yarn Audit has detected vulnerabilities in ${env.JOB_NAME}. You can check if there are patches for them in the full report, build details here: <${env.RUN_DISPLAY_URL}|Build ${env.BUILD_DISPLAY_NAME}>.")
      }
    }
  }

  onPR() {
    env.XUI_URL="https://xui-et-ccd-definitions-admin-pr-${CHANGE_ID}.preview.platform.hmcts.net"

    before('smoketest:preview') {
      sh """
      ./bin/preview/import-ref-data.sh ${CHANGE_ID} ${ET_PREVIEW_FLEXI_DB_PASSWORD}
    """
    }

    afterAlways('smoketest:preview') {
      env.CCD_DEF_BASE_URL="https://et-cos-et-ccd-definitions-admin-pr-${CHANGE_ID}.preview.platform.hmcts.net"
      env.ET_COS_URL=env.CCD_DEF_BASE_URL
      env.CCD_DEF_URL="https://ccd-data-store-api-et-ccd-definitions-admin-pr-${CHANGE_ID}.preview.platform.hmcts.net"

      sh """
      yarn setup
      yarn generate-excel-preview ${CHANGE_ID}
      yarn setup-englandwales && cd et-ccd-definitions-englandwales && yarn generate-excel-preview ${CHANGE_ID}
      cd .. && yarn setup-scotland && cd et-ccd-definitions-scotland && yarn generate-excel-preview ${CHANGE_ID}
    """

      steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'definitions/xlsx/et-admin-ccd-config-preview.xlsx'
      steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'et-ccd-definitions-englandwales/definitions/xlsx/et-englandwales-ccd-config-preview.xlsx'
      steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'et-ccd-definitions-scotland/definitions/xlsx/et-scotland-ccd-config-preview.xlsx'

    }

    before('functionalTest:preview') {
      env.CCD_ADMIN_URL="https://admin-web-et-ccd-definitions-admin-pr-${CHANGE_ID}.preview.platform.hmcts.net"
      env.IMPORT_PREVIEW=true
    }

    afterAlways('functionalTest:preview') {
      env.IDAM_API_URL = "https://idam-api.aat.platform.hmcts.net"
      env.ROLE_ASSIGNMENT_URL = "https://am-role-assignment-et-ccd-definitions-admin-pr-${CHANGE_ID}.preview.platform.hmcts.net"
      env.XUI_URL = "https://xui-et-ccd-definitions-admin-pr-${CHANGE_ID}.preview.platform.hmcts.net"
      sh """
      ./bin/add-org-roles-to-users.sh
    """
    }
  }

  afterSuccess('akschartsinstall') {
    // if WA is enabled: false, then DMN upload will fail 
    try {
      onPR {
        env.IDAM_API_URL = "https://idam-api.aat.platform.hmcts.net"
        env.CAMUNDA_BASE_URL = "https://camunda-et-ccd-definitions-admin-pr-${CHANGE_ID}.preview.platform.hmcts.net"
        env.SERVICE_AUTH_PROVIDER_API_BASE_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
        sh """
      ./bin/pull-latest-dmn-files.sh ${dmnBranch}
      ./bin/pull-latest-camunda-wa-files.sh ${bpmnBranch}
    """
      }
    } catch (error) {
      onMaster {
        slackSend(channel: '#et-builds', color: 'warning', message: "DMN upload for in ${env.JOB_NAME} has failed. If this is expected, please ignore, build details here: <${env.RUN_DISPLAY_URL}|Build ${env.BUILD_DISPLAY_NAME}>.")
      }
    }
  }
}
